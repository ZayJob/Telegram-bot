from poloniex_API import *
from bitcoincharts import *
from mongodb import *

cripto_list = ['USDT_BTC','USDT_DASH','USDT_LTC','USDT_XMR','USDT_ETH']
crypto_total = ['totalBTC', 'totalETH', 'totalUSDC', 'totalUSDT', 'totalXMR']

def get_balanses_wallet():
    data = api_query('returnBalances')
    answer = '<b>–í–∞—à –±–∞–ª–∞–Ω—Å</b>\n\n'

    for i in data.keys():
        for j in range(len(cripto_list)):
            if i == cripto_list[j][5:]:
                answer += "<b>{0}</b> - {1:.3f}$\n".format(i,float(data[cripto_list[j][5:]]))
    return answer

def get_poloniex_course():
    data = get_course()
    answer = '<b>–ö—É—Ä—Å –±–∏—Ä–∂–∏ Poloniex</b>\n\n'

    for i in data.keys():
        if (float(data[i]['last']) > 1.0) and i[3] == 'T':
            answer += "<b>{0}</b> - {1:.3f}$ ({2:.3f}%)\n".format(i[5:],float(data[i]['last']),float(data[i]['percentChange']))
    return answer

def get_course_top5():
    data = get_course()
    answer = ''

    for i in data.keys():
        for j in range(len(cripto_list)):
            if i == cripto_list[j]:
                answer += "<b>{0}</b> - {1:.3f}$ ({2:.3f}%)\n".format(cripto_list[j][5:],float(data[cripto_list[j]]['last']),float(data[cripto_list[j]]['percentChange']))
    return answer

def get_plot_btc():
    load_image()
    return open('bitcoincharts.jpg', 'rb')

def autorization_user(message):
    user = search_in_db(message)
    if user['name_comp'] == None:
        return True
    else:
        return False

def create_account(message):
    user = search_in_db(message)
    if user == None:
        data = {'id':message.chat.id,'name_comp':None,'byb_coin':100,'tower_1':0,'tower_2':0,'tower_3':0,'poloniex_key':None,'poloniex_sign':None,'state_controller':'menu','oil_1':0,'oil_2':0,'oil_3':0}
        insert_user(data)
    
def info_of_comp(message):
    data = search_in_db(message)
    return "üè¢<b>{0}</b> - –∫–æ–º–ø–∞–Ω–∏—è\n‚ö´Ô∏è<b>{1}</b> - Bcoin\n‚õΩ<b>{2}</b> - –∫–æ–ª-–≤–æ –≤—ã—à–µ–∫ ‚Ññ1\n‚õΩ<b>{3}</b> - –∫–æ–ª-–≤–æ –≤—ã—à–µ–∫ ‚Ññ2\n‚õΩ<b>{4}</b> - –∫–æ–ª-–≤–æ –≤—ã—à–µ–∫ ‚Ññ3".format(data['name_comp'],data['byb_coin'],data['tower_1'],data['tower_2'],data['tower_3'])

def string_hello():
    return "–ü—Ä–∏–≤–µ—Ç, —è CryptoTowerBot!\n–ù–∞–∂–º–∏ /menu, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."

def string_help():
    return "HELP:\n/start - start bot\n/menu - base menu\n/help - help\nCreator bot - <a href='https://vk.com/zay_chek'>Vlad Bubeniuk</a>"

def oil_tower(message):
    data = search_in_db(message)
    return '''
                ‚õΩ–ù–µ—Ñ—Ç—è–Ω—ã–µ –≤—ã—à–∫–∏\n–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –Ω–µ—Ñ—Ç—è–Ω—ã–µ –≤—ã—à–∫–∏. –ù–µ—Ñ—Ç—è–Ω—ã–µ –≤—ã—à–∫–∏ –¥–æ–±—ã–≤–∞—é—Ç üõ¢ –±–∞—Ä—Ä–µ–ª–∏ –Ω–µ—Ñ—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –í—ã –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –Ω–∞ —Ä—ã–Ω–∫–µ –∑–∞ ‚ö´Ô∏è Bcoin –∏ –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –∫–∞–∫ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏!
                \n–í–∞—à–∏ –Ω–µ—Ñ—Ç—è–Ω—ã–µ –≤—ã—à–∫–∏:
                \n‚õΩ –î–µ—Ä–µ–≤—è–Ω–Ω–∞—è —Ä—É—á–Ω–∞—è –≤—ã—à–∫–∞
                \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {0}
                \n–î–æ–±—ã—Ç–æ: {1} üõ¢ –±–∞—Ä—Ä–µ–ª–µ–π –Ω–µ—Ñ—Ç–∏
                \n‚õΩ –ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –≤—ã—à–∫–∞
                \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {2}
                \n–î–æ–±—ã—Ç–æ: {3} üõ¢ –±–∞—Ä—Ä–µ–ª–µ–π –Ω–µ—Ñ—Ç–∏
                \n‚õΩ –§–∞–±—Ä–∏—á–Ω–∞—è –≤—ã—à–∫–∞
                \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {4}
                \n–î–æ–±—ã—Ç–æ: {5} üõ¢ –±–∞—Ä—Ä–µ–ª–µ–π –Ω–µ—Ñ—Ç–∏
            '''.format(data['tower_1'],data['oil_1'],data['tower_2'],data['oil_2'],data['tower_3'],data['oil_3'])

def buy_oil_tower_string():
    return  '‚õΩÔ∏è‚Ññ1 –î–µ—Ä–µ–≤—è–Ω–Ω–∞—è —Ä—É—á–Ω–∞—è –≤—ã—à–∫–∞\n–î–æ–±—ã–≤–∞–µ—Ç 16 üõ¢ –±–∞—Ä—Ä–µ–ª–µ–π –Ω–µ—Ñ—Ç–∏ –≤ —á–∞—Å\n–¶–µ–Ω–∞: 100 ‚ö´Ô∏è Bcoin\n‚õΩÔ∏è‚Ññ2 –ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –≤—ã—à–∫–∞\n–î–æ–±—ã–≤–∞–µ—Ç 184 üõ¢ –±–∞—Ä—Ä–µ–ª–µ–π –Ω–µ—Ñ—Ç–∏ –≤ —á–∞—Å\n–¶–µ–Ω–∞: 1000 ‚ö´Ô∏è Bcoin\n‚õΩÔ∏è‚Ññ3 –§–∞–±—Ä–∏—á–Ω–∞—è –≤—ã—à–∫–∞\n–î–æ–±—ã–≤–∞–µ—Ç 1249 üõ¢ –±–∞—Ä—Ä–µ–ª–µ–π –Ω–µ—Ñ—Ç–∏ –≤ —á–∞—Å\n–¶–µ–Ω–∞: 6000 ‚ö´Ô∏è Bcoin\n'

def buy_oil_tower_1(message):
    if update_user_info_1(message) == True:
        return "–£—Å–ø–µ—à–Ω–æ!‚úÖ"
    else:
        return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!‚úñÔ∏è"

def buy_oil_tower_2(message):
    if update_user_info_2(message) == True:
        return "–£—Å–ø–µ—à–Ω–æ!‚úÖ"
    else:
        return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!‚úñÔ∏è"

def buy_oil_tower_3(message):
    if update_user_info_3(message) == True:
        return "–£—Å–ø–µ—à–Ω–æ!‚úÖ"
    else:
        return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!‚úñÔ∏è"

def return_user(message):
    return search_in_db(message)

def update_state_menu(message,menu):
    update_state(message,menu)

def update_comp_name_users(message,name):
    update_comp_name(message,name)

def collect(message):
    collect_update_coin(message)

def top_5():
    users = top_5_in_db()
    answer = "<b>–¢–û–ü-5 –∏–≥—Ä–æ–∫–æ–≤üîù</b>\n"
    for i in range(5):
        answer += "üè¢<b>{0}</b> - –∫–æ–º–ø–∞–Ω–∏—è\n‚ö´Ô∏è<b>{1}</b> - Bcoin\n".format(users[i]['name_comp'],users[i]['byb_coin'])
    return answer

def return_24_volume():
    data = get_history()
    answer = "<b>–û–±—ä–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∑–∞ 24 —á–∞—Å–∞üïú</b>\n\n"
    for i in crypto_total:
        answer += "<b>{0}</b> - {1:.3f}\n".format(i[5:],float(data[i]))
    return answer

